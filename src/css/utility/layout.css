/*  TOC
─────────────────────────────────
Centered Max Inline Content
Stack
Position
Visually hidden
// https://codepen.io/miunau/pen/oNVaJoN?editors=1100
// https://codepen.io/miriamsuzanne/pen/yLwRpGQ?editors=1100
─────────────────────────────── */

/* 
// MARK: Centered Content
Centered Content
*/

.max-inline-content { padding-inline: max(var(--space-sm-lg), calc(50vw - var(--content-size, 90em) / 2)) }

/* 
// MARK: Stack
Stack
*/

/* .stack > * { margin-block: 0 }
.stack > * + * { margin-block-start: var(--space, 1em); } */
.stack > * { margin-block: 0 }
.stack > * + * { margin-block-start: var(--space, 1em); }

.stack[data-space="3xs"] > * + * { --space: var(--space-3xs) }
.stack[data-space="2xs"] > * + * { --space: var(--space-2xs) }
.stack[data-space="xs"] > * + * { --space: var(--space-xs) }
.stack[data-space="sm"] > * + * { --space: var(--space-sm) }
.stack[data-space="md"] > * + * { --space: var(--space-md) }
.stack[data-space="lg"] > * + * { --space: var(--space-lg) }
.stack[data-space="xl"] > * + * { --space: var(--space-xl) }
.stack[data-space="2xl"] > * + * { --space: var(--space-2xl) }
.stack[data-space="3xl"] > * + * { --space: var(--space-3xl) }

/* .stack > *:nth-child() {
  margin-block-end: auto;
} */

/*
// MARK: Overflow
scroll-x-overflow
*/
.scroll-x-overflow {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
  overscroll-behavior-inline: contain;
}

.scroll-x-overflow > * { flex: 0 0 auto; }

.scroll-x-overflow > img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}

.scroll-x-overflow > * + * { margin-inline-start: var(--space-lg); }

.overflow-x-hint { 
  -webkit-mask-image: linear-gradient(to right, #0000, #000, #000, #0000); 
  mask-image: linear-gradient(to right, #0000, #000, #000, #0000); 
}

/* 
// MARK: Position
Position
*/

.relative { position: relative }
.absolute { position: absolute }
.fixed { position: fixed } 
.sticky { position: sticky } 

/* 
// MARK: Visually Hidden
Visually Hidden
*/

:is(.visually-hidden, .sr-only) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/**/
.inline-stacked {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap, var(--space-lg));
}

.inline-stacked > :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 40ch;
}

.inline-stacked > :last-child {
  flex-grow: 1;
}