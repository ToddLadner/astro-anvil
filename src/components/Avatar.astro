---
// Avatar.astro
import type { HTMLAttributes } from 'astro/types';
import { getImage } from 'astro:assets';

interface Props extends HTMLAttributes<"div"> {
  src: string | ImageMetadata;
  alt?: string;
  size?: "xs" | "sm" | "md" | "lg" | "xl";
  shape?: string;
}

const { src, alt = 'Avatar', size = 'md', shape } = Astro.props;

const sizeMap = {
  xs: 50,
  sm: 75,
  md: 100,
  lg: 150,
  xl: 200,
};

const imageSize = sizeMap[size];

const image = await getImage({
  src: src,
  format: "webp",
  width: imageSize,
  height: imageSize,
});

const uniqueId = `mask-${Math.random().toString(36).substr(2, 9)}`;
---
<style>
  .avatar {
    width: 12rem;
    container: avatar / inline-size;
    position: relative;
    display: flex;
    aspect-ratio: 1;
    margin-inline: auto;
  }

  .avatar svg {
    width: 100%;
    height: 100%;
  }

  .avatar img {
    max-width: 100%;
  }

  .avatar .border {
    fill: none;
    stroke: rgba(0, 0, 0, 0.1);
    stroke-width: 2;
  }

  .avatar.xs { width: 3rem; }
  .avatar.sm { width: 6rem; }
  .avatar.md { width: 9rem; }
  .avatar.lg { width: 12rem; }
  .avatar.xl { width: 15rem; }

  .badge { 
    background-color: var(--green-4);
    border-radius: var(--radius-ellipse);
    size: 20cqi;
    position: absolute;
    inset-block-end: 4cqi;
    inset-inline-end: 4cqi;
  }
</style>

<div class:list={['avatar', size]}>
  <svg role="none">
    <mask id={uniqueId}>
      <circle fill="white" cx="50%" cy="50%" r="50%"></circle>
      <circle fill="black" cx="86%" cy="86%" r="12%"></circle>
    </mask>
    <g mask={`url(#${uniqueId})`}>
      <image 
        x="0" y="0" 
        height="100%" 
        preserveAspectRatio="xMidYMid slice" 
        width="100%" 
        xlink:href={image.src}>
      </image>
      <circle fill="none" cx="50%" cy="50%" r="50%" stroke="rgba(0,0,0,0.1)" stroke-width="5"></circle>
    </g>
  </svg>
  <div class="badge"></div>
</div>