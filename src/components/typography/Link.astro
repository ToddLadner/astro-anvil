---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<"h1"> {
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';
  underline?: 'auto' | 'always' | 'hover' | 'none';	
  color?: 'base' | 'brand';
  contrast?: boolean;
  classes?: string;
}

const { 
  size = 'md',
  underline = 'auto',
  color = 'base',
  contrast = false,
  classes,
  ...rest
} = Astro.props;


---

<style>
  a {
    margin-block: calc(var(--space-3xs) * -1);
    margin-inline: calc(var(--space-3xs) * -1);
    padding-block: var(--space-3xs);
    padding-inline: var(--space-3xs);
    color: var()

    &:not(:hover) { text-decoration: inherit; }

    :link {
      --color-hue: var(--hue-indigo);
      text-decoration-color: var(--color-2);
    }

    :visited {
      --color-hue: var(--hue-purple);
      text-decoration-color: var(--color-2);
    }
  }

  .link-2xl { font-size: var(--font-size-2xl) }
  .link-xl { font-size: var(--font-size-xl) }
  .link-lg { font-size: var(--font-size-lg) }
  .link-md { font-size: var(--font-size-md) }
  .link-sm { font-size: var(--font-size-sm) }
  .link-xs { font-size: var(--font-size-xs) }
</style>

<a class:list={[size && `link-${size}`, underline, color, contrast && 'contrast', classes]} {...rest}>
  <slot />
</a>