---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<"h1"> {
  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';
  color?: 'base' | 'brand';
  text?: string;
  contrast?: boolean;
  classes?: string;
}

const { 
  as = 'h1',
  size,
  color = 'base',
  text,
  contrast = false,
  classes,
  ...rest
} = Astro.props;

const Tag = as;
---

<style>
  h1 { font-size: var(--font-size, var(--font-size-2xl)) }
  h2 { font-size: var(--font-size, var(--font-size-xl)) }
  h3 { font-size: var(--font-size, var(--font-size-lg)) }
  h4 { font-size: var(--font-size, var(--font-size-md)) }
  h5 { font-size: var(--font-size, var(--font-size-sm)) }
  h6 { font-size: var(--font-size, var(--font-size-xs)) }

  :is(h1, h2, h3, h4, h5, h6) { text-wrap: balance; }

  :is(h1, h2, h3, h4) {
    font-variation-settings: "wght" var(--weight, 600);
    line-height: var(--lineheight-xs);
    margin-block: 0;
    max-inline-size: var(--measure-md);
  }
</style>

<Tag class:list={[size && `font-${size}`, color, contrast && 'contrast', classes]} {...rest}>
  <slot />
  {text}
</Tag>