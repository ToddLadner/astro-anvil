---
// Import necessary types
import type { HTMLAttributes } from 'astro/types';

// Define the props interface
interface Option {
  text: string;
  value: string;
}

interface Props extends HTMLAttributes<"select"> {
  options: (string | Option)[];
}

const { 
  options, 
  ...rest 
} = Astro.props;
---

<style>
  select {
  appearance: none;
	background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="oklch(0.63 0.2 175)" d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>');
	background-repeat: no-repeat;
	background-position: right 1em top 50%;
	background-size: .65em;

  @media (prefers-color-scheme: dark) {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="oklch(0.63 0.2 175)" d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>');
  }
}
</style>

<select {...rest}>
  {options.map(option => {
    if (typeof option === 'string') {
      return <option value={option}>{option}</option>;
    }
    return <option value={option.value}>{option.text}</option>;
  })}
</select>
