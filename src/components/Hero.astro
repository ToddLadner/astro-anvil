---
import type { HTMLAttributes } from 'astro/types';
import { Image } from 'astro:assets';
import type { StringLiteralType } from 'typescript';


interface Props extends HTMLAttributes<"div"> {
  title: string;
  subtitle?: string;
  content: string[];
  imagePath?: string;
  videoPath?: string;
  altText?: string;
  contentWidth?: string;
  mediaWidth?: number;
  mediaHeight?: number;
  borderRadius?: string;
  layout?: 'ltr' | 'rtl' | 'centered';
  classes?: string;
}


const { 
  title, 
  subtitle,
  content,
  imagePath, 
  videoPath,
  altText = 'Hero media',
  contentWidth= 'var(--measure-lg)',
  mediaWidth = 800,
  mediaHeight = 600,
  borderRadius = 'var(--radius-md)',
  layout = 'ltr',
  classes,
  ...rest  
} = Astro.props as Props;

// Dynamically import all images from the /src/assets directory
const images = import.meta.glob('@images/*.{jpeg,jpg,png,gif}', { eager: true }) as Record<string, { default: string }>;

// Resolve the image path
const resolvedImagePath = imagePath && images[`${imagePath}`]?.default;

// Video source (assuming video is in public folder or similar)
const videoSource = videoPath ? videoPath : '';

const Tag = 'h1'; // Default tag
---

<style>
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    justify-content: center;
  }

  .hero.ltr, .hero.rtl {
    flex-direction: row;
    align-items: center;
  }

  .hero.rtl {
    flex-direction: row-reverse;
  }

  .hero.centered .hero-media {
    margin-bottom: 1rem;
    width: 100%;
    max-height: 500px;
    overflow: hidden;
  }

  .hero.centered .hero-content-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .hero-subtitle {
    font-size: 0.75rem;
    margin-bottom: 0.5rem;
    color: #555;
  }

  .hero-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .hero-content {
    font-size: 1.25rem;
  }

  .hero-content p {
    margin: 0.5rem 0;
  }

  .hero-slot {
    margin-top: 1rem;
  }
</style>

<div class:list={['hero', layout, classes]} {...rest}>
  <div class="hero-content-wrapper" style={`max-width: ${contentWidth};`}>
    {subtitle && <div class="hero-subtitle">{subtitle}</div>}
    <Tag class="hero-title">{title}</Tag>
    <div class="hero-content">
      {content.map((paragraph) => (
        <p>{paragraph}</p>
      ))}
    </div>
    <div class="hero-slot">
      <slot></slot>
    </div>
  </div>

  {(layout === 'ltr' || layout === 'rtl') && resolvedImagePath && (
    <div class="hero-media">
      <Image 
        src={resolvedImagePath} 
        width={mediaWidth} 
        height={mediaHeight} 
        alt={altText}
        style={`border-radius: ${borderRadius};`}
      />
    </div>
  )}

  {videoSource && (
    <div class="hero-media">
      <video 
        controls 
        width={mediaWidth} 
        height={mediaHeight}
        style={`border-radius: ${borderRadius};`}
      >
        <source src={videoSource} type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    </div>
  )}

  {layout === 'centered' && resolvedImagePath && !videoSource && (
    <div class="hero-media">
      <Image 
        src={resolvedImagePath} 
        width={mediaWidth} 
        height={mediaHeight} 
        alt={altText}
        style={`border-radius: ${borderRadius};`}
      />
    </div>
  )}
</div>
